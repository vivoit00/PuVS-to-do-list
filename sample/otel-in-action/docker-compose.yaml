networks:
  todonet:

services:

  postgresdb:
    image: postgres
    networks:
      - todonet
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=mydb

  todobackend-django:
    build:
      context: ./todobackend_django
      dockerfile: Dockerfile
    networks:
      - todonet
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - postgresdb
    volumes:
      - ./todobackend_django:/app

  todoui-thymeleaf:
    image: maeddes/todoui-thymeleaf:v2404
    build:
      context: ./todoui-thymeleaf
      dockerfile: Dockerfile
    networks:
      - todonet
    ports:
      - "8090:8090"
    environment:
      - BACKEND_URL=http://todobackend-django:8080/
      - OTEL_EXPORTER_OTLP_ENDPOINT=otelcol:4317
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=otelcol:4317
      - OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=grpc
      - OTEL_EXPORTER_OTLP_METRICS_PROTOCOL=grpc
      - OTEL_RESOURCE_ATTRIBUTES=service.name=todoui-thymeleaf
      - OTEL_METRICS_EXPORTER=otlp,logging-otlp
      - OTEL_LOGS_EXPORTER=none

  todoui-flask:
    image: maeddes/todoui-flask:v2404
    build:
      context: ./todoui-flask
    networks:
      - todonet
    ports:
      - "5001:5000"
    environment:
      - BACKEND_URL=http://todobackend-django:8080/     
      - OTEL_EXPORTER_OTLP_ENDPOINT=otelcol:4317
      - OTEL_RESOURCE_ATTRIBUTES=service.name=todoui-flask
      - OTEL_METRICS_EXPORTER=otlp

  loadgenerator:
    image: generator:v0.1
    build:
      context: ./loadgenerator
    networks:
      - todonet
